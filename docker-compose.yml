version: "3.8"

# 自定义网络(默认桥接), 不使用links通信
networks:
  beer_net:
    driver: bridge

services:
  rabbitmq:
    image: rabbitmq:management
    hostname: rabbitmq
    container_name: rabbitmq
    networks:
      - beer_net
    # 通过挂载数据卷备份rabbitmq数据
    volumes:
      - ./compose/rabbitmq:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    # always表容器运行发生错误时一直重启
    #    restart: always
    tty: true
    stdin_open: true

  mysql:
    image: mysql
    hostname: mysql
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: admin.191215.*
      MYSQL_DATABASE: beer
    networks:
      - beer_net
    volumes:
      - ./compose/mysql/logs:/logs
      - ./compose/mysql/data:/var/lib/mysql
    ports:
      - "3306:3306"
    #    restart: always
    tty: true
    stdin_open: true

  beer:
    # 项目根目录下的Dockerfile
    build: .
    container_name: beer
    hostname: beer
    # 将django后端收集到的静态文件持久化到本地，供nginx部署时使用
    volumes:
      - ./beer-web/dist/static/admin:/root/beer_server/static/admin
      - ./beer-web/dist/static/grappelli:/root/beer_server/static/grappelli
      - ./beer-web/dist/static/rest_framework:/root/beer_server/static/rest_framework
      - ./beer-web/dist/static/media:/root/beer_server/static/media
      - ./compose/server/logs:/root/beer_server/logs
      - ./compose/server/celery-logs:/root/beer_server/celery.log
      - ./compose/server/global_funcs:/root/beer_server/global_funcs
      #      - ./compose/server/settings:/root/beer_server/beer_server
    networks:
      - beer_net
    depends_on:
      - mysql
      - rabbitmq
    ports:
      - "8000:8000"
    # restart: always
    tty: true
    stdin_open: true

  nginx:
    build: ./compose/nginx
    hostname: nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./beer-web/dist:/usr/share/nginx/html
      - ./compose/nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
      - ./compose/nginx/log:/var/log/nginx
    networks:
      - beer_net
    depends_on:
      - beer
    #    restart: always
    tty: true
    stdin_open: true