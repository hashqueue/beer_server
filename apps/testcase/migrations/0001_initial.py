# Generated by Django 3.1.7 on 2021-04-09 15:28

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('testsuite', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='更新时间', verbose_name='更新时间')),
                ('deleted', models.BooleanField(default=False, help_text='逻辑删除(值为true表示已删除,为false表示未被删除)', verbose_name='逻辑删除(值为true表示已删除,为false表示未被删除)')),
                ('creator', models.CharField(help_text='创建人', max_length=150, verbose_name='创建人')),
                ('modifier', models.CharField(help_text='最后修改人', max_length=150, verbose_name='最后修改人')),
                ('name', models.CharField(help_text='测试用例名称', max_length=128, verbose_name='测试用例名称')),
                ('testsuite', models.ForeignKey(help_text='所属套件', null=True, on_delete=django.db.models.deletion.SET_NULL, to='testsuite.testsuite', verbose_name='所属套件')),
            ],
            options={
                'verbose_name': '测试用例',
                'verbose_name_plural': '测试用例',
                'db_table': 'testcase_info',
            },
        ),
        migrations.CreateModel(
            name='TestStep',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='测试步骤名称', max_length=128, verbose_name='测试步骤名称')),
                ('method', models.CharField(choices=[('GET', 'GET方法'), ('POST', 'POST方法'), ('PUT', 'PUT方法'), ('PATCH', 'PATCH方法'), ('DELETE', 'DELETE方法')], help_text='请求方法', max_length=10, verbose_name='请求方法')),
                ('url_path', models.CharField(help_text='请求路径', max_length=256, verbose_name='请求路径')),
                ('desc', models.CharField(blank=True, help_text='用例描述', max_length=512, verbose_name='用例描述')),
                ('json', models.JSONField(blank=True, help_text='请求的JSON格式的body', verbose_name='请求的JSON格式的body')),
                ('quote_testcase_id', models.PositiveIntegerField(help_text='引用的用例ID', null=True, verbose_name='引用的用例ID')),
                ('testcase', models.ForeignKey(help_text='所属用例', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teststeps', to='testcase.testcase', verbose_name='所属用例')),
            ],
            options={
                'verbose_name': '测试步骤',
                'verbose_name_plural': '测试步骤',
                'db_table': 'teststep_info',
            },
        ),
        migrations.CreateModel(
            name='TestStepValidator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('validator_type', models.CharField(blank=True, choices=[('equal', '实际结果等于预期结果'), ('contained_by', '实际结果是否被包含在预期结果中'), ('contains', '预期结果是否被包含在实际结果中'), ('endswith', '实际结果以预期结果结尾'), ('greater_or_equals', '实际结果大于等于预期结果'), ('greater_than', '实际结果大于预期结果'), ('length_equal', '实际结果长度等于预期结果'), ('length_greater_or_equals', '实际结果长度大于等于预期结果'), ('length_greater_than', '实际结果长度大于预期结果'), ('length_less_or_equals', '实际结果长度小于等于预期结果'), ('length_less_than', '实际结果长度小于预期结果'), ('less_or_equals', '实际结果小于等于预期结果'), ('less_than', '实际结果小于预期结果'), ('not_equal', '实际结果不等于预期结果'), ('regex_match', '实际结果是否符合预期结果的正则表达式匹配规则'), ('startswith', '实际结果以预期结果开头')], help_text='提取器类型', max_length=56, verbose_name='提取器类型')),
                ('jmespath_expression', models.TextField(blank=True, help_text='使用jmespath表达式从响应结果里提取到的值', verbose_name='使用jmespath表达式从响应结果里提取到的值')),
                ('expected_value', models.TextField(blank=True, help_text='预期结果', verbose_name='预期结果')),
                ('desc', models.CharField(blank=True, help_text='参数描述', max_length=512, verbose_name='参数描述')),
                ('teststep', models.ForeignKey(help_text='所属测试步骤', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='step_validators', to='testcase.teststep', verbose_name='所属测试步骤')),
            ],
            options={
                'verbose_name': '测试步骤校验器',
                'verbose_name_plural': '测试步骤校验器',
                'db_table': 'validator_info',
            },
        ),
        migrations.CreateModel(
            name='TestStepParams',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('var_key', models.CharField(blank=True, help_text='参数的key', max_length=128, verbose_name='参数的key')),
                ('var_value', models.TextField(blank=True, help_text='参数的value(参数值/jmespath表达式)', verbose_name='参数的value(参数值/jmespath表达式)')),
                ('var_key_type', models.CharField(blank=True, choices=[('params', '查询字符串参数'), ('data', 'body中的form类型参数'), ('headers', '请求头参数'), ('cookies', 'cookie'), ('jmespath_expression', 'jmespath表达式')], help_text='参数类型', max_length=25, verbose_name='参数类型')),
                ('desc', models.CharField(blank=True, help_text='参数描述', max_length=512, verbose_name='参数描述')),
                ('teststep', models.ForeignKey(help_text='所属测试步骤', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='step_params', to='testcase.teststep', verbose_name='所属测试步骤')),
            ],
            options={
                'verbose_name': '测试步骤的参数',
                'verbose_name_plural': '测试步骤的参数',
                'db_table': 'param_info',
            },
        ),
    ]
